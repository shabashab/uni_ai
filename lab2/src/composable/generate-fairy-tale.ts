import { StageAnswer } from '../models/stage-model';

const makeFirstWordCapital = (str: string) => {
  return str.charAt(0).toUpperCase() + str.slice(1);
}

const getIsMan = (answers: StageAnswer[]) => {
  console.log(answers);
  if (answers[1].value === "woman") {
    return false
  } else {
    return true
  }
}

const getHeShe = (answers: StageAnswer[]) => {
  return getIsMan(answers) ? 'він' : 'вона';
}

const getFirstParagraph = (answers: StageAnswer[]) => {
  const name = answers[2].value;

  const womanOptions = {
    '5': `У маленькому селі жила дівчинка на ім'я ${name}. Вона була веселою і допитливою дівчинкою, яка любила гратися з друзями.`,
    '18': `У великому місті жила дівчина на ім'я ${name}. Вона була розумною і амбітною дівчиною, яка мріяла стати лікарем. ${name} добре вчилася в школі і отримувала хороші оцінки. Вона також була активною в громадських справах і допомагала іншим. `,
    '35': `У невеликому містечку жила жінка на ім'я ${name}. Вона була успішною бізнес-леді, яка володіла власною компанією. ${name} була розумною і підприємливою жінкою, яка завжди прагнула до успіху. Вона також була люблячою дружиною і матір'ю.`,
    '50': `У великому місті жила жінка на ім'я ${name}. Вона була досвідченою лікаркою, яка працювала в лікарні. ${name} була мудрою і доброю жінкою, яка завжди допомагала іншим. Вона також була люблячою бабусею. `
  }

  const manOptions = {
    '5': `У маленькому селі жив хлопчик на ім'я ${name}. Він був веселим і допитливим хлопчиком, який любив гратися з друзями.`,
    '18': `У великому місті жив юнак на ім'я ${name}. Він був розумним і амбітним юнаком, який мріяв стати лікарем. ${name} добре вчився в школі і отримував хороші оцінки. Він також був активним у громадських справах і допомагав іншим.`,
    '35': `У невеликому містечку жив чоловік на ім'я ${name}. Він був успішним бізнесменом, який володів власною компанією. ${name} був розумним і підприємливим чоловіком, який завжди прагнув до успіху. Він також був люблячим чоловіком і батьком.`,
    '50': `У великому місті жив чоловік на ім'я ${name}. Він був досвідченим лікарем, який працював в лікарні. ${name} був мудрим і добрим чоловіком, який завжди допомагав іншим. Він також був люблячим дідусем`,
  }

  if (!getIsMan(answers)) {
    // @ts-ignore
    return womanOptions[`${answers[3].value}`];
  } else {
    // @ts-ignore
    return manOptions[`${answers[3].value}`];
  }
}

const getSecondParagraph = (answers: StageAnswer[]) => {
  const name = answers[2].value;
  const isMan = getIsMan(answers);

  const options = {
    '5': `Одного разу ${name} ${isMan ? 'грався' : 'гралася'} в лісі, коли ${isMan ? 'побачив' : 'побачила'} щось дивне. Це була велика і яскрава пташка, яку ${getHeShe(answers)} ніколи раніше не ${isMan? 'бачив' : 'бачила'}. Пташка летіла дуже низько над землею, і ${name} ${isMan? 'зрозумів' : 'зрозуміла'}, що вона заблукала. ${makeFirstWordCapital(getHeShe(answers))} вирішив допомогти пташці знайти дорогу додому.`,
    '18': `${name} ${isMan ? 'вчився' : 'вчилася'} в університеті, коли ${isMan ? 'отримав' : 'отримала'} дзвінок від друга. Друг сказав, що його батьки потрапили в аварію і потребують допомоги. ${name} відразу ж ${isMan ? 'поїхав' : 'поїхала'} до друга, щоб допомогти.`,
    '35': `${name} ${isMan ? 'працював' : 'працювала'} у офісі, коли ${isMan ? 'отримав' : 'отримала'} повідомлення, що ${isMan? 'його': 'її'} компанія оголосила про банкрутство. ${name} ${isMan? 'втратив': 'втратила'} роботу і не знав, що робити. ${makeFirstWordCapital(getHeShe(answers))} ${isMan? 'вирішив': 'вирішила'}, що ${isMan? 'повинний': 'повинна'} знайти новий шлях у житті.`,
    '50': `${name} ${isMan ? 'працював' : 'працювала'} лікарем, коли до нього прийшла жінка з важкою хворобою. ${name} ${isMan ? 'розумів' : 'розуміла'}, що жінка може померти, і ${getHeShe(answers)} ${isMan? 'хотів': 'хотіла'} зробити все можливе, щоб врятувати її.`
  }

  // @ts-ignore
  return options[`${answers[3].value}`];
}

const getThirdParagraph = (answers: StageAnswer[]) => {
  const name = answers[2].value;
  const isMan = getIsMan(answers);
  
  const goodPlotOptions = {
    '5': `${name} ${isMan? 'біг': 'бігла'} за пташкою, і вона все більше наближалася до ${isMan? 'ньго': 'неї'}. Коли ${getHeShe(answers)} був зовсім близько, то пташка зупинилася і подивилася на ${isMan? 'нього': 'неї'}. ${name} ${isMan? 'посміхнувся': 'посміхнулась'} і ${isMan? 'простягнув': 'простягнула'} їй руку. Пташка сіла ${isMan? 'йому': 'їй'} на руку, і вони разом полетіли в ліс.`,
    '18': `${name} ${isMan? 'приїхав': 'приїхала'} до друга, і ${isMan? 'побачив': 'побачила'}, що його будинок горить. ${makeFirstWordCapital(getHeShe(answers))} ${isMan? 'побіг': 'побігла'} до будинку, щоб допомогти, і ${isMan? 'йому': 'їй'} вдалося врятувати батьків ${isMan? 'його': 'її'} друга. Батьки друга були вдячні ${name} за те, що ${getHeShe(answers)} їх ${isMan? 'врятував': 'врятувала'}. ${name} зрозумів, що ${getHeShe(answers)} хоче стати пожежником, щоб допомагати іншим людям у небезпеці.`,
    '35': `${name} ${isMan? 'вирішив': 'вирішила'}, що повинен створити власну компанію. ${makeFirstWordCapital(getHeShe(answers))} ${isMan? 'почав': 'почала'} працювати над цим, і через кілька років ${isMan? 'йому': 'їй'} вдалося створити успішну компанію. ${makeFirstWordCapital(getHeShe(answers))} знову ${isMan? 'став': 'стала'} забезпечувати свою сім'ю, і ${isMan? 'його дружина': 'її чоловік'} і діти знову були щасливі.`,
    '50': `${name} ${isMan? 'зміг': 'змогла'} врятувати жінку. Вона була вдячна ${name} за те, що ${getHeShe(answers)} її ${isMan? 'врятував': 'врятувала'}. ${name} ${isMan? 'був': 'була'} ${isMan? 'щасливий': 'щаслива'}, що зміг допомогти їй. ${makeFirstWordCapital(getHeShe(answers))} ${isMan? 'вирішив': 'вирішила'}, що продовжить працювати лікарем, щоб допомагати іншим людям.`
  }
  
  const badPlotOptions = {
    '5': `${name} ${isMan ? 'почав': 'почала'} бігти за пташкою, але вона була занадто швидкою. ${makeFirstWordCapital(getHeShe(answers))} ${isMan ? 'втомився і зупинився' : 'втомилась і зупинилась'}, щоб відпочити. Коли ${getHeShe(answers)} ${isMan ? 'підняв' : 'підняла'} голову, то побачив, що пташка полетіла далеко. ${name} ${isMan ? 'засмутився і пішов' : 'засмутився і пішла'} додому.`,
    '18': `${name} ${isMan ? 'приїхав' : 'приїхала'} до друга, і ${isMan ? 'побачив' : 'побачила'}, що його будинок горить. ${makeFirstWordCapital(getHeShe(answers))} ${isMan ? 'побіг' : 'побігла'} до будинку, щоб допомогти, але було вже пізно. Батьки ${isMan ? 'його' : 'її'} друга загинули у вогні. ${name} ${isMan ? 'був' : 'була'} у розпачі і не ${isMan ? 'знав' : 'знала'}, що робити. ${makeFirstWordCapital(getHeShe(answers))} ${isMan ? 'вирішив' : 'вирішила'}, що повинен покинути місто і почати все з нуля. Там ${getHeShe(answers)} ${isMan ? 'знайшов' : 'знайшла'} нових друзів і почав нове життя.`,
    '35': `${name} не ${isMan ? 'знав' : 'знала'}, що робити. ${makeFirstWordCapital(getHeShe(answers))} не ${isMan ? 'знав' : 'знала'}, як знайти роботу і як прогодувати свою сім'ю. ${makeFirstWordCapital(getHeShe(answers))} ${isMan ? 'став' : 'стала'} ${isMan ? 'деприсивним і замкнутим' : 'деприсивною і замкненою'}. ${isMan ? 'Його дружина' : 'Її чоловік'} і діти почали ${isMan ? 'його' : 'її'} уникати. ${name} ${isMan ? 'відчував' : 'відчувала'} себе ${isMan ? 'винним і нікчемним' : 'винною і нікчемною'}`,
    '50': `${name} ${isMan ? 'зробив' : 'зробила'} все можливе, щоб врятувати жінку, але вона померла. ${name} ${isMan ? 'був розбитим' : 'була розбитою'} горем. ${makeFirstWordCapital(getHeShe(answers))} ${isMan ? 'відчував' : 'відчувала'} себе ${isMan ? 'винним' : 'винуватою'} у тому, що не ${isMan ? 'зміг' : 'змогла'} врятувати її. ${makeFirstWordCapital(getHeShe(answers))} ${isMan ? 'вирішив' : 'вирішила'}, що більше не буде працювати лікарем. ${makeFirstWordCapital(getHeShe(answers))} ${isMan ? 'вирішив' : 'вирішила'}, що ${isMan ? 'повинен стати виколадачем, чим зможе створити нове покоління лікарів що будуть кращі за нього' : 'повинна стати виколадачем, чим зможе створити нове покоління лікарів що будуть кращі за неї'}.`,
  }
  
  // @ts-ignore
  return answers[4].value === 'good' ? goodPlotOptions[`${answers[3].value}`] : badPlotOptions[`${answers[3].value}`];
}

const getFourthParagraph = (answers: StageAnswer[]) => {
  const name = answers[2].value;
  const isMan = getIsMan(answers);
  const isFunny = answers[5].value === 'funny';

  if (answers[3].value === 35) {
    return `-- З цієї ${isFunny? 'смішної': 'повчальної'} історії ми можемо зрозуміти що не варто втрачати надію. Якщо ви втратили роботу, то не варто втрачати надію. Ви повинні продовжувати шукати себе, не зважаючи на думку інших.`
  }

  if (isFunny) {
    return `${name} ${isMan? 'повернувся': 'повернулась'} додому і ${isMan? 'розповів': 'розповіла'} свої переживання своїм родичам. Але вони не зрозуміли всіх переживань ${isMan? 'його': 'її'} переживань і ${getHeShe(answers)} образився на них`
  } else {
    return `- З казки про ${name} ми можемо зрозуміти що важливо вміти допомагати іншим людям. Це допомагає нам стати кращими людьми.`
  }
}


const appendParagraphSeparator = (text: string) => {
  return text + '\n\n';
}

export const generateText = (answers: StageAnswer[]) => {
  return appendParagraphSeparator(getFirstParagraph(answers)) + appendParagraphSeparator(getSecondParagraph(answers)) + appendParagraphSeparator(getThirdParagraph(answers)) + appendParagraphSeparator(getFourthParagraph(answers));
}